{\rtf1\ansi\ansicpg1252\cocoartf2511
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \
\
Create a function that takes an integer \
\
	create a for loop\
		- iterate till i is < than number\
		- create an empty variable steps of type string\
\
	create a inner loop \
		- iterate till j is < than number\
		- if  i  >=  j \
			- steps += \'93#\'94\
	else \
		- steps += \'93 \'93\
\
	// before outer loop closure\
	print steps\
\
\
==================\
\
Steps recursive\
\
Create a function that takes an integer, iniate a row = 0 and an empty step string\
\
	// when n is equal to number of rows\
	// means that is the end , just return and stop\
	if n == row Return\
\
	//when n is equal to the number of columns\
	// means that is the end of the columns, add one new row\
	// and start over until the number of rows is equal to number passed \
	if n == step.length\
	- print step\
	- return recursive function ( n , row + 1)  // add 1 to row\
	\
	\
	if step.length <= row\
		- step += \'93#\'94\
	else\
		-step += \'93 \'94\
\
\
	// then call recursive function again\
	recursive function ( n, row, stair )}